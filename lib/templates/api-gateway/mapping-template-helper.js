'use strict';

const _shortId = require('shortid');

/**
 * A module with utility functions that help with request and response mapping
 * templates. Most methods return apache velocity template snippets that can
 * be embedded into a larger template object.
 */
const mappingTemplateHelper = {

    
    
    /**
     * Generates a user info snippet based on a JWT token specified via an
     * input parameter (typically header). This snippet assumes that the JWT
     * contains a valid JSON payload. Malformed requests can result if this
     * assumption is not valid.
     * 
     * @param {String} [jwtTokenName='auth'] An optional jwt token name.
     *        This value will be used to extract the JWT token from the input
     *        request.
     * @param {String} [prop='_user'] An optional value that specifies the name
     *        of the property generated by this snippet.
     *
     * @return {String} An apache velocity template snippet that can be
     *        injected into a larger template.
     */
    generateJWTUserInfo: function(jwtTokenName, prop) {
        if(typeof jwtTokenName !== 'string' || jwtTokenName.length <= 0) {
            jwtTokenName = 'auth';
        }
        if(typeof prop !== 'string' || prop.length <= 0) {
            prop = '_user';
        }

        const tokenVar = `$jwtTokens_${_shortId.generate().replace(/-/g, '_')}`;

        return `#set(${tokenVar} = $input.params('${jwtTokenName}').split('\\.'))
#if(${tokenVar}.size() > 2)
    "${prop}": $util.base64Decode(${tokenVar}[1])
#end`;
    }
    
}

module.exports = mappingTemplateHelper;
